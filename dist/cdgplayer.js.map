{"version":3,"file":"cdgplayer.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/cdg/constants.js","../src/cdg/CDGContext.js","../src/cdg/logger.js","../src/cdg/CDGInstruction.js","../src/cdg/CDGParser.js","../src/cdg/CDGPlayer.js","../src/utilities/deferred.js","../src/loader/CDGFileLoader.js","../node_modules/soundtouchjs/dist/soundtouch.js","../src/utilities/is.js","../src/observable/pubsub.js","../src/observable/observable.js","../src/player/KaraokePlayer.js","../src/controls/CDGControls.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/**\n * CDG Context Constants\n * =====================\n *\n * These are used to set up the drawing context\n */\n\nexport const TILE_WIDTH = 6;\nexport const TILE_HEIGHT = 12;\nexport const TILES_X = 50;\nexport const TILES_Y = 18;\nexport const TILES_X_BORDER = 1;\nexport const TILES_Y_BORDER = 1;\nexport const WIDTH = TILE_WIDTH * TILES_X; // 300px\nexport const HEIGHT = TILE_HEIGHT * TILES_Y; // 216px\nexport const BORDER_WIDTH = TILE_WIDTH * TILES_X_BORDER;\nexport const BORDER_HEIGHT = TILE_HEIGHT * TILES_Y_BORDER;\nexport const DISPLAY_WIDTH = WIDTH - 2 * BORDER_WIDTH; // 288px\nexport const DISPLAY_HEIGHT = HEIGHT - 2 * BORDER_HEIGHT; // 192px\nexport const DISPLAY_BOUNDS = [\n  BORDER_WIDTH,\n  BORDER_HEIGHT,\n  BORDER_WIDTH + DISPLAY_WIDTH,\n  BORDER_HEIGHT + DISPLAY_HEIGHT\n];\nexport const DISPLAY_PIXELS = WIDTH * HEIGHT;\n\n/**\n * CDG Instruction Constants\n * =========================\n *\n * These are used for interpreting commands\n */\n\nexport const CDG_NOOP = 0;\nexport const CDG_MEMORY_PRESET = 1;\nexport const CDG_BORDER_PRESET = 2;\nexport const CDG_TILE_BLOCK = 6;\nexport const CDG_SCROLL_PRESET = 20;\nexport const CDG_SCROLL_COPY = 24;\nexport const CDG_SET_KEY_COLOR = 28;\nexport const CDG_LOAD_CLUT_LOW = 30;\nexport const CDG_LOAD_CLUT_HI = 31;\nexport const CDG_TILE_BLOCK_XOR = 38;\n\nexport const CDG_SCROLL_NONE = 0;\nexport const CDG_SCROLL_LEFT = 1;\nexport const CDG_SCROLL_RIGHT = 2;\nexport const CDG_SCROLL_UP = 1;\nexport const CDG_SCROLL_DOWN = 2;\n\nexport const CDG_DATA = 4;\n\nexport const COMMAND_MASK = 0x3f;\nexport const CDG_COMMAND = 0x09;\nexport const SECTORS_PER_SECOND = 75;\nexport const PACKETS_PER_SECTOR = 4;\nexport const PACKET_SIZE = 24;\n\n/**\n *  CDG Audio Constants\n */\n\nexport const GAIN_DEFAULT = 1.0;\nexport const PITCH_DEFAULT = 1;\n\n/**\n *  CDG Player Constants\n */\n\nexport const SCALE_DEFAULT = 1;\nexport const FILTER_PLAYBACK_OFFSET = 800;\nexport const START_TIME = '0:00';\n\n/**\n * CDG Controls Constants\n */\nexport const PANEL_POSITION = ['top', 'bottom'];\n","import {\n    WIDTH,\n    HEIGHT,\n    DISPLAY_PIXELS,\n} from './constants';\n\n/**\n * CDG Context\n * ===========\n *\n * CDG rendering context, maintaining the size and content of the screen and the color palette\n */\nexport default class CDGContext {\n    /**\n     * Horizontal offset\n     * @type {number}\n     */\n    hOffset = 0;\n\n    /**\n     * Vertical offset\n     * @type {number}\n     */\n    vOffset = 0;\n\n    /**\n     * Transparent index in the color lookup table\n     * @type {number}\n     */\n    keyColor = null;\n\n    /**\n     * Background index in the color lookup table\n     * @type {number}\n     */\n    backgroundContainer = null;\n\n    /**\n     * Last index in the color lookup table that was used as a border preset\n     * @type {number}\n     */\n    borderColor = null;\n\n    /**\n     * Last index in the color lookup table that was used as a memory preset\n     * @type {number}\n     */\n    memoryColor = null;\n\n    /**\n     * Color lookup table\n     * @type {Array}\n     */\n    clut = (new Array(16)).fill([0, 0, 0]);\n\n    /**\n     * Pixels\n     * @type {Array}\n     */\n    pixels = (new Array(DISPLAY_PIXELS)).fill(0);\n\n    /**\n     * Buffer\n     * @type {Array}\n     */\n    buffer = (new Array(DISPLAY_PIXELS)).fill(0);\n\n    /**\n     * Creates a CDG rendering context\n     *\n     * @constructor\n     * @param  {Object} [options] - context options\n     * @param  {number} [options.width] - width of the canvas\n     * @param  {number} [options.height] - height of the canvas\n     * @param  {HTMLCanvasElement} [options.canvas] - canvas element\n     * @param  {CanvasRenderingContext2D} [options.ctx] - canvas rendering context\n     * @param  {ImageData} [options.imageData] - pixel data\n     */\n    constructor({\n                    width = WIDTH,\n                    height = HEIGHT,\n                    canvas = this.createCanvas(width, height),\n                    ctx = this.createCanvasContext(canvas),\n                    imageData = this.createImageData(canvas, ctx, width, height),\n                } = {}) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.imageData = imageData;\n    }\n\n    /**\n     * Creates a canvas at the given size\n     *\n     * @param  {number} width - width of the canvas\n     * @param  {number} height - height of the canvas\n     * @return {HTMLCanvasElement} created canvas\n     */\n    createCanvas(width, height) {\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        return canvas;\n    }\n\n    /**\n     * Creates a new 2D context for a canvas\n     *\n     * @param  {HTMLCanvasElement} canvas - canvas element\n     * @return {CanvasRenderingContext2D} created context\n     */\n    createCanvasContext(canvas) {\n        const ctx = canvas.getContext('2d');\n        ctx.mozImageSmoothingEnabled = false;\n        ctx.webkitImageSmoothingEnabled = false;\n        ctx.msImageSmoothingEnabled = false;\n        ctx.imageSmoothingEnabled = false;\n        return ctx;\n    }\n\n    /**\n     * Creates image data to dump the pixel data for canvas rendering\n     *\n     * @param  {HTMLCanvasElement} canvas - canvas element\n     * @param  {CanvasRenderingContext2D} ctx - 2D canvas rendering context\n     * @param  {number} width - width of the canvas\n     * @param  {number} height - height of the canvas\n     * @return {ImageData} created image data\n     */\n    createImageData(canvas, ctx, width = canvas.width, height = canvas.height) {\n        return ctx.createImageData(width, height);\n    }\n\n    /**\n     * Resets the offset and key color\n     */\n    reset() {\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.keyColor = null;\n        this.backgroundColor = null;\n        this.borderColor = null;\n        this.memoryColor = null;\n        this.pixels.fill(0);\n    }\n\n    /**\n     * Sets an entry in the color lookup table\n     *\n     * @param  {Number} index - index in the palette\n     * @param  {number} r - red component of the color\n     * @param  {number} g - green component of the color\n     * @param  {number} b - blue component of the color\n     */\n    setCLUTEntry(index, r, g, b) {\n        this.clut[index] = [r, g, b].map(c => c * 17);\n    }\n\n    /**\n     * Sets a pixel's CLUT index value\n     *\n     * @param {number} x - x position of the pixel\n     * @param {number} y - y position of the pixel\n     * @param {number} colorIndex - CLUT index\n     */\n    setPixel(x, y, colorIndex) {\n        this.pixels[x + (y * WIDTH)] = colorIndex;\n    }\n\n    /**\n     * Gets a pixel's CLUT index value\n     *\n     * @param  {number} x - x position of the pixel\n     * @param  {number} y - y position of the pixel\n     * @return {number} CLUT index\n     */\n    getPixel(x, y) {\n        return this.pixels[x + (y * WIDTH)];\n    }\n\n    /**\n     * Gets the background color index from the CLUT based on the transparent or background color\n     *\n     * @return {number} CLUT index\n     */\n    getBackground() {\n        switch (true) {\n            case this.keyColor != null:\n                return this.keyColor;\n            case this.backgroundColor != null:\n                return this.backgroundColor;\n            case this.memoryColor != null:\n                return this.memoryColor;\n            case this.borderColor != null:\n                return this.borderColor;\n            default:\n                return 0;\n        }\n    }\n\n    /**\n     * Converts palette-based pixel data to image data\n     *\n     * @return {ImageData} generated imagedata\n     */\n    generateImageData() {\n        const [left, top, right, bottom] = [0, 0, WIDTH, HEIGHT];\n        for (let x = left; x < right; x++) {\n            for (let y = top; y < bottom; y++) {\n                // The offset is where we draw the pixel in the raster data\n                const offset = 4 * (x + (y * WIDTH));\n                // Respect the horizontal and vertical offsets for grabbing the pixel color\n                const px = ((x - this.hOffset) + WIDTH) % WIDTH;\n                const py = ((y - this.vOffset) + HEIGHT) % HEIGHT;\n                const pixelIndex = px + (py * WIDTH);\n                const colorIndex = this.pixels[pixelIndex];\n                const [r, g, b] = this.clut[colorIndex];\n                // Set the rgba values in the image data\n                this.imageData.data[offset] = r;\n                this.imageData.data[offset + 1] = g;\n                this.imageData.data[offset + 2] = b;\n                this.imageData.data[offset + 3] = colorIndex === this.keyColor ? 0x00 : 0xff;\n            }\n        }\n        return this.imageData;\n    }\n\n    /**\n     * Renders the pixel buffer\n     */\n    renderFrame() {\n        this.ctx.putImageData(this.generateImageData(), 0, 0);\n    }\n}\n","/* eslint-disable no-console */\n\nexport function log(...args) {\n    console && console.log && console.log(...args);\n}\n\nexport function warn(...args) {\n    console && console.warn && console.warn(...args);\n}\n\nexport function error(...args) {\n    console && console.error && console.error(...args);\n}\n\nexport default {\n    log,\n    warn,\n    error,\n};\n","import {\n    TILE_WIDTH,\n    TILE_HEIGHT,\n    WIDTH,\n    HEIGHT,\n    DISPLAY_BOUNDS,\n    CDG_NOOP,\n    CDG_MEMORY_PRESET,\n    CDG_BORDER_PRESET,\n    CDG_TILE_BLOCK,\n    CDG_SCROLL_PRESET,\n    CDG_SCROLL_COPY,\n    CDG_SET_KEY_COLOR,\n    CDG_LOAD_CLUT_LOW,\n    CDG_LOAD_CLUT_HI,\n    CDG_TILE_BLOCK_XOR,\n    CDG_SCROLL_NONE,\n    CDG_SCROLL_LEFT,\n    CDG_SCROLL_RIGHT,\n    CDG_SCROLL_UP,\n    CDG_SCROLL_DOWN,\n    CDG_DATA,\n    PACKET_SIZE\n} from './constants';\n\nimport { warn } from './logger';\n\n/**\n * CDG instruction base class\n * ==========================\n *\n * Does nothing\n */\nexport class CDGInstruction {\n    static instruction = '';\n    static opcode = null;\n\n    get instruction() {\n        return this.constructor.instruction;\n    }\n    get opcode() {\n        return this.constructor.opcode;\n    }\n\n    constructor(bytes, offset = 0) {\n        this.bytes = bytes.slice(offset, offset + PACKET_SIZE);\n    }\n\n    execute(/*context*/) {}\n\n    bytecodeToString() {\n        return this.bytes.map(byte => byte.toString(16).padStart(2, '0')).join('');\n    }\n\n    detailsToString() {\n        return '';\n    }\n\n    toString() {\n        return this.instruction;\n    }\n}\n\n/**\n * No-op instruction\n * =================\n *\n * Does nothing\n */\nexport class CDGNoopInstruction extends CDGInstruction {\n    static instruction = 'No-op';\n    static opcode = CDG_NOOP;\n}\n\n/**\n * Memory Preset instruction\n * =========================\n *\n * Set the screen to a particular color\n */\nexport class CDGMemoryPresetInstruction extends CDGInstruction {\n    static instruction = 'Memory Preset';\n    static opcode = CDG_MEMORY_PRESET;\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        const doff = offset + CDG_DATA;\n        this.color = bytes[doff] & 0x0f;\n        this.repeat = bytes[doff + 1] & 0x0f;\n    }\n\n    execute(context) {\n        context.memoryColor = this.color;\n        context.backgroundColor = this.color;\n        context.pixels.fill(this.color);\n    }\n\n    detailsToString() {\n        return `color index: ${this.color}`;\n    }\n}\n\n/**\n * Border Preset instruction\n * =========================\n *\n * Set the border of the screen to a particular color\n */\nexport class CDGBorderPresetInstruction extends CDGInstruction {\n    static instruction = 'Border Preset';\n    static opcode = CDG_BORDER_PRESET;\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        this.color = bytes[offset + CDG_DATA] & 0x0f;\n    }\n\n    execute(context) {\n        context.borderColor = this.color;\n        context.backgroundColor = this.color;\n        const [left, top, right, bottom] = DISPLAY_BOUNDS;\n        for (let x = 0; x < WIDTH; x++) {\n            for (let y = 0; y < top; y++) {\n                context.setPixel(x, y, this.color);\n            }\n            for (let y = bottom + 1; y < HEIGHT; y++) {\n                context.setPixel(x, y, this.color);\n            }\n        }\n        for (let y = top; y <= bottom; y++) {\n            for (let x = 0; x < left; x++) {\n                context.setPixel(x, y, this.color);\n            }\n            for (let x = right + 1; x < WIDTH; x++) {\n                context.setPixel(x, y, this.color);\n            }\n        }\n    }\n\n    detailsToString() {\n        return `color index: ${this.color}`;\n    }\n}\n\n/**\n * Tile Block (Normal) instruction\n * ===============================\n *\n * Load a 12 x 6, 2 color tile and display it normally.\n */\nexport class CDGTileBlockInstruction extends CDGInstruction {\n    static instruction = 'Tile Block';\n    static opcode = CDG_TILE_BLOCK;\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        const doff = offset + CDG_DATA;\n        // some players check bytes[doff+1] & 0x20 and ignores if it is set (?)\n        this.colors = [bytes[doff] & 0x0f, bytes[doff + 1] & 0x0f];\n        this.row = bytes[doff + 2] & 0x1f;\n        this.column = bytes[doff + 3] & 0x3f;\n        this.pixels = bytes.slice(doff + 4, doff + 16);\n    }\n\n    execute(context) {\n        /* blit a tile */\n        const x = this.column * TILE_WIDTH;\n        const y = this.row * TILE_HEIGHT;\n\n        // @TODO: These should be >= instead, I think...\n        if (x + TILE_WIDTH > WIDTH || y + TILE_HEIGHT > HEIGHT) {\n            warn(`TileBlock out of bounds (${this.row}, ${this.column})`);\n            return;\n        }\n\n        for (let i = 0; i < TILE_HEIGHT; i++) {\n            const curbyte = this.pixels[i];\n            for (let j = 0; j < TILE_WIDTH; j++) {\n                const color = this.colors[(curbyte >> (5 - j)) & 0x01];\n                this.op(context, x + j, y + i, color);\n            }\n        }\n    }\n\n    op(context, x, y, color) {\n        context.setPixel(x, y, color);\n    }\n\n    detailsToString() {\n        return `row: ${this.row}, column: ${this.column}, color indexes: [${this.colors.join(\n            ', '\n        )}]`;\n    }\n}\n\n/**\n * Tile Block (XOR) instruction\n * ============================\n *\n * Load a 12 x 6, 2 color tile and display it using the XOR method\n */\nexport class CDGTileBlockXORInstruction extends CDGTileBlockInstruction {\n    static instruction = 'Tile Block (XOR)';\n    static opcode = CDG_TILE_BLOCK_XOR;\n\n    op(context, x, y, color) {\n        // context.pixels[offset] = context.pixels[offset] ^ color;\n        context.setPixel(x, y, context.getPixel(x, y) ^ color);\n    }\n}\n\n/**\n * Scroll Preset instruction\n * =========================\n *\n * Scroll the image, filling in the new area with a color\n */\nexport class CDGScrollPresetInstruction extends CDGInstruction {\n    static instruction = 'Scroll Preset';\n    static opcode = CDG_SCROLL_PRESET;\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        const doff = offset + CDG_DATA;\n        this.color = bytes[doff] & 0x0f;\n\n        const hScroll = bytes[doff + 1] & 0x3f;\n        this.hCmd = (hScroll & 0x30) >> 4;\n        this.hOffset = hScroll & 0x07;\n\n        const vScroll = bytes[doff + 2] & 0x3f;\n        this.vCmd = (vScroll & 0x30) >> 4;\n        this.vOffset = vScroll & 0x0f;\n    }\n\n    // eslint-disable-next-line complexity\n    execute(context) {\n        context.backgroundColor = this.color;\n        context.hOffset = Math.min(this.hOffset, TILE_WIDTH - 1);\n        context.vOffset = Math.min(this.vOffset, TILE_HEIGHT - 1);\n\n        let hScroll = 0;\n        switch (this.hCmd) {\n            case CDG_SCROLL_RIGHT:\n                hScroll = TILE_WIDTH;\n                break;\n            case CDG_SCROLL_LEFT:\n                hScroll = -TILE_WIDTH;\n                break;\n            case CDG_SCROLL_NONE:\n            default:\n                break;\n        }\n\n        let vScroll = 0;\n        switch (this.hCmd) {\n            case CDG_SCROLL_DOWN:\n                vScroll = TILE_HEIGHT;\n                break;\n            case CDG_SCROLL_UP:\n                vScroll = -TILE_HEIGHT;\n                break;\n            case CDG_SCROLL_NONE:\n            default:\n                break;\n        }\n\n        if (!hScroll && !vScroll) {\n            return;\n        }\n\n        for (let x = 0; x < WIDTH; x++) {\n            for (let y = 0; y < HEIGHT; y++) {\n                context.buffer[x + y * WIDTH] = this.getPixel(context, x + hScroll, y + vScroll);\n            }\n        }\n\n        // Swap buffers\n        [context.pixels, context.buffer] = [context.buffer, context.pixels];\n    }\n\n    getPixel(context, offx, offy) {\n        if (offx > 0 && offx < WIDTH && offy > 0 && offy < HEIGHT) {\n            return context.pixels[offx + offy * WIDTH];\n        }\n        return this.color;\n    }\n\n    detailsToString() {\n        let vScroll = false;\n        let hScroll = false;\n        if (this.vCmd === CDG_SCROLL_UP) {\n            vScroll = 'up';\n        } else if (this.vCmd === CDG_SCROLL_DOWN) {\n            vScroll = 'down';\n        }\n        if (this.vCmd === CDG_SCROLL_LEFT) {\n            hScroll = 'left';\n        } else if (this.vCmd === CDG_SCROLL_RIGHT) {\n            hScroll = 'right';\n        }\n        return [vScroll, hScroll, `vOffset: ${this.vOffset}`, `hOffset: ${this.hOffset}`]\n            .filter(v => v)\n            .join(' ');\n    }\n}\n\n/**\n * Scroll Copy instruction\n * =======================\n *\n * Scroll the image, rotating the bits back around\n */\nexport class CDGScrollCopyInstruction extends CDGScrollPresetInstruction {\n    static instruction = 'Scroll Copy';\n    static opcode = CDG_SCROLL_COPY;\n\n    getPixel(context, offx, offy) {\n        offx = (offx + WIDTH) % WIDTH;\n        offy = (offy + HEIGHT) % HEIGHT;\n        return context.pixels[offx + offy * WIDTH];\n    }\n}\n\n/**\n * Set Key Color instruction\n * =========================\n *\n * Define a specific color as being transparent\n */\nexport class CDGSetKeyColorInstruction extends CDGInstruction {\n    static instruction = 'Set Key Color';\n    static opcode = CDG_SET_KEY_COLOR;\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        this.color = bytes[offset + CDG_DATA] & 0x0f;\n    }\n\n    execute(context) {\n        context.keyColor = this.color;\n    }\n\n    detailsToString() {\n        return `color index: ${this.color}`;\n    }\n}\n\n/**\n * Load Color Table (Low) instruction\n * ==================================\n *\n * Load in the lower 8 entries of the color table\n */\nexport class CDGLoadCLUTLowInstruction extends CDGInstruction {\n    static instruction = 'Load CLUT (Low)';\n    static opcode = CDG_LOAD_CLUT_LOW;\n\n    get clutOffset() {\n        return 0;\n    }\n\n    constructor(bytes, offset = 0) {\n        super(bytes, offset);\n        const doff = offset + CDG_DATA;\n        this.colors = [];\n        for (let i = 0; i < 8; i++) {\n            const cur = doff + 2 * i;\n            const color = ((bytes[cur] & 0x3f) << 6) + (bytes[cur + 1] & 0x3f);\n\n            this.colors[i] = [\n                color >> 8, // red\n                (color & 0xf0) >> 4, // green\n                color & 0x0f // blue\n            ];\n        }\n    }\n\n    execute(context) {\n        for (let i = 0; i < 8; i++) {\n            context.setCLUTEntry(\n                i + this.clutOffset,\n                this.colors[i][0],\n                this.colors[i][1],\n                this.colors[i][2]\n            );\n        }\n    }\n\n    detailsToString() {\n        return `colors: [${this.colors\n            .map(\n                (color, i) => `${i + this.clutOffset}: #${color.map(c => c.toString(16)).join('')}`\n            )\n            .join(', ')}]`;\n    }\n}\n\n/**\n * Load Color Table (High) instruction\n * ==================================\n *\n * Load in the upper 8 entries of the color table\n */\nexport class CDGLoadCLUTHighInstruction extends CDGLoadCLUTLowInstruction {\n    static instruction = 'Load CLUT (High)';\n    static opcode = CDG_LOAD_CLUT_HI;\n\n    get clutOffset() {\n        return 8;\n    }\n}\n","import {\n    CDG_NOOP,\n    CDG_MEMORY_PRESET,\n    CDG_BORDER_PRESET,\n    CDG_TILE_BLOCK,\n    CDG_SCROLL_PRESET,\n    CDG_SCROLL_COPY,\n    CDG_SET_KEY_COLOR,\n    CDG_LOAD_CLUT_LOW,\n    CDG_LOAD_CLUT_HI,\n    CDG_TILE_BLOCK_XOR,\n    COMMAND_MASK,\n    CDG_COMMAND,\n    PACKET_SIZE,\n} from './constants';\n\nimport { warn } from './logger';\n\nimport {\n    CDGNoopInstruction,\n    CDGMemoryPresetInstruction,\n    CDGBorderPresetInstruction,\n    CDGTileBlockInstruction,\n    CDGScrollPresetInstruction,\n    CDGScrollCopyInstruction,\n    CDGSetKeyColorInstruction,\n    CDGLoadCLUTLowInstruction,\n    CDGLoadCLUTHighInstruction,\n    CDGTileBlockXORInstruction,\n} from './CDGInstruction';\n\n/**\n * CDG Parser\n * ==========\n *\n * Instruction parser, converting bytecodes to arrays of CDGInstructions\n */\nexport default class CDGParser {\n    static get instructionClassByType() {\n        return {\n            [CDG_NOOP]: CDGNoopInstruction,\n            [CDG_MEMORY_PRESET]: CDGMemoryPresetInstruction,\n            [CDG_BORDER_PRESET]: CDGBorderPresetInstruction,\n            [CDG_TILE_BLOCK]: CDGTileBlockInstruction,\n            [CDG_SCROLL_PRESET]: CDGScrollPresetInstruction,\n            [CDG_SCROLL_COPY]: CDGScrollCopyInstruction,\n            [CDG_SET_KEY_COLOR]: CDGSetKeyColorInstruction,\n            [CDG_LOAD_CLUT_LOW]: CDGLoadCLUTLowInstruction,\n            [CDG_LOAD_CLUT_HI]: CDGLoadCLUTHighInstruction,\n            [CDG_TILE_BLOCK_XOR]: CDGTileBlockXORInstruction,\n        };\n    }\n\n    /**\n     * Maps commands to instruction classes\n     * @type {Object}\n     */\n    instructionClassByType = this.constructor.instructionClassByType;\n\n    /**\n     * Registers an instruction type\n     *\n     * @param  {string} opcode - CDG instruction opcode\n     * @param  {CDGInstruction} InstructionClass - CDG instruction subclass\n     */\n    registerInstruction(opcode, InstructionClass) {\n        this.instructionClassByType[opcode] = InstructionClass;\n    }\n\n    /**\n     * Creates an instruction\n     *\n     * @param  {string} opcode - CDG instruction opcode\n     * @param  {string} bytes - bytes with CDG instruction\n     * @param  {number} offset - a little piece of heaven\n     * @return {CDGInstruction}\n     */\n    createInstruction(opcode, bytes, offset = 0) {\n        if (!(opcode in this.instructionClassByType)) {\n            warn(`Unknown CDG instruction (instruction = ${opcode})`);\n        }\n        const InstructionClass = this.instructionClassByType[opcode] || CDGNoopInstruction;\n        return new InstructionClass(bytes, offset);\n    }\n\n    /**\n     * Parses a single CDG instruction packet\n     *\n     * @param  {string} bytes - bytes with CDG instruction\n     * @param  {number} offset - a little piece of heaven\n     * @return {CDGInstruction}\n     */\n    parseInstruction(bytes, offset = 0) {\n        const command = bytes[offset] & COMMAND_MASK;\n        if (command === CDG_COMMAND) {\n            const opcode = bytes[offset + 1] & COMMAND_MASK;\n            return this.createInstruction(opcode, bytes, offset);\n        }\n        return new CDGNoopInstruction(bytes, offset);\n    }\n\n    /**\n     * Parses all the CDG instruction packets\n     *\n     * @param {string} bytes - bytes with CDG instruction\n     * @return {CDGInstruction[]}\n     */\n    parseInstructions(bytes) {\n        const instructions = [];\n        const bytesLength = bytes.length;\n        for (let offset = 0; offset < bytesLength; offset += PACKET_SIZE) {\n            instructions.push(this.parseInstruction(bytes, offset));\n        }\n        return instructions.filter(instruction => instruction);\n    }\n}\n","import {\n    PACKETS_PER_SECTOR,\n    SECTORS_PER_SECOND,\n} from './constants';\n\nimport CDGContext from './CDGContext';\nimport CDGParser from './CDGParser';\n\n/**\n * Calculates current time for the sake of determining playback intervals\n *\n * @return {number} milliseconds\n */\nfunction now() {\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        return performance.now();\n    } else if (typeof process !== 'undefined' && typeof process.hrtime === 'function') {\n        const [seconds, microseconds] = process.hrtime();\n        return (seconds * 1000) + (microseconds / 1000000);\n    }\n    return Date.now();\n}\n\nfunction requestFrame(callback) {\n    if (typeof requestAnimationFrame === 'function') {\n        return window.requestAnimationFrame(callback);\n    }\n    return setTimeout(callback, 25);\n}\n\nfunction cancelFrame(id) {\n    if (typeof cancelAnimationFrame === 'function') {\n        return cancelAnimationFrame(id);\n    }\n    return clearTimeout(id);\n}\n\n/**\n * CDG Player\n * ==========\n *\n * Provides an interface for interpreting CDG instructions and rendering the results to a canvas\n */\nexport default class CDGPlayer {\n    /**\n     * CDG instructions\n     * @type {Array}\n     */\n    instructions = [];\n\n    /**\n     * Packet counter\n     * @type {Number}\n     */\n    pc = -1;\n\n    /**\n     * requestAnimationFrame unique ID\n     * @type {number}\n     */\n    frameId = null;\n\n    /**\n     * Current time (ms)\n     * @type {Number}\n     */\n    pos = 0;\n\n    /**\n     * Last sync time (ms)\n     * @type {number}\n     */\n    lastSyncPos = null;\n\n    /**\n     * Last sync timestamp\n     * @type {DOMHighResTimeStamp}\n     */\n    lastTimestamp = null;\n\n    /**\n     * Steps through however many frames are necessary to bring the context up-to-date with\n     *\n     * @param  {DOMHighResTimeStamp} timestamp\n     * @return {self}\n     */\n    update = (timestamp = now()) => {\n        // Packet counter says relax\n        if (this.pc === -1) {\n            return this;\n        }\n\n        // go ahead and request the next frame\n        this.frameId = requestFrame(this.update);\n\n        if (this.lastSyncPos) {\n            // last known audio position + time delta\n            this.pos = this.lastSyncPos + (timestamp - this.lastTimestamp);\n        } else {\n            // time delta only (unsynced)\n            this.pos += timestamp - this.lastTimestamp;\n            this.lastTimestamp = timestamp;\n        }\n\n        // determine packet we should be at, based on spec\n        // of 4 packets per sector @ 75 sectors per second\n        const newPc = Math.floor(SECTORS_PER_SECOND * PACKETS_PER_SECTOR * (this.pos / 1000));\n\n        const ffAmt = newPc - this.pc;\n        if (ffAmt > 0) {\n            this.fastForward(ffAmt);\n            this.render();\n        }\n\n        return this;\n    };\n\n    /**\n     * Creates CDGPlayer instance\n     *\n     * @constructor\n     * @param  {Object} [options] - CDG player options\n     * @param  {Object} [options.contextOptions] - options for the CDG context\n     * @param  {function} [options.afterRender] - function to call after rendering a frame\n     */\n    constructor({\n                    contextOptions = {},\n                    context = this.createContext(contextOptions),\n                    afterRender,\n                } = {}) {\n        this.context = context;\n        this.afterRender = afterRender;\n    }\n\n    /**\n     * Creates a CDG context instance for rendering\n     *\n     * @param  {Object} [options] - parameters passed to the context constructor\n     * @return {CDGContext} context instance\n     */\n    createContext(options = {}) {\n        return new CDGContext(options);\n    }\n\n    /**\n     * Loads CDG data and parses the instructions\n     *\n     * @param  {string} data - CDG instruction data\n     * @return {self}\n     */\n    load(data) {\n        const parser = new CDGParser();\n        this.instructions = parser.parseInstructions(data);\n        this.reset();\n        return this;\n    }\n\n    /**\n     * Resets the counters\n     *\n     * @return {self}\n     */\n    reset() {\n        this.pc = 0;\n        this.pos = 0;\n        this.lastSyncPos = null;\n        this.context.reset();\n        return this;\n    }\n\n    /**\n     * Renders the CDG context frame\n     * @return {self}\n     */\n    render() {\n        this.context.renderFrame();\n        this.afterRender && this.afterRender(this.context);\n        return this;\n    }\n\n    /**\n     * Executes an instruction on this player's context\n     *\n     * @param  {CDGInstruction} instruction - CDG instruction to run\n     * @return {self}\n     */\n    executeInstruction(instruction) {\n        if (instruction && typeof instruction.execute === 'function') {\n            instruction.execute(this.context);\n        }\n        return this;\n    }\n\n    /**\n     * Executes the next CDG instruction packet\n     *\n     * @return {self}\n     */\n    step() {\n        if (this.pc >= 0 && this.pc < this.instructions.length) {\n            this.executeInstruction(this.instructions[this.pc]);\n            this.pc += 1;\n        } else {\n            this.pc = -1;\n            this.stop();\n        }\n        return this;\n    }\n\n    /**\n     * Executes several CDG instructions\n     *\n     * @param  {number} [count]\n     * @return {self}\n     */\n    fastForward(count = 1) {\n        const max = this.pc + count;\n        while (this.pc >= 0 && this.pc < max) {\n            this.step();\n        }\n        return this;\n    }\n\n    /**\n     * Starts CDG playback\n     *\n     * @return {self}\n     */\n    play() {\n        if (!this.frameId) {\n            this.frameId = requestFrame(this.update);\n            this.lastTimestamp = now();\n        }\n        return this;\n    }\n\n    /**\n     * Stops CDG playback\n     *\n     * @return {self}\n     */\n    stop() {\n        cancelFrame(this.frameId);\n        this.frameId = null;\n        this.lastSyncPos = null;\n        return this;\n    }\n\n    /**\n     * Syncs playback with a timestamp\n     *\n     * This is used to sync with the current time of the audio track\n     *\n     * @param  {number} ms - sync timestamp\n     * @return {self}\n     */\n    sync(ms) {\n        this.lastSyncPos = ms;\n        this.lastTimestamp = now();\n        return this;\n    }\n}\n","/**\n * Deferred()\n * Is a shim, written by Mozilla. It's a backwards/forwards compatible helper object to account for the\n * elimination of the Deferred object while still having a need for the functionality.\n *\n * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred#backwards_forwards_compatible\n * (Usage example can be found at above link, but here's the basics)\n *\n * const deferred = new Deferred();\n * const promise = deferred.promise; // still just a promise\n */\n\nconst Deferred = function () {\n    // update 062115 for typeof\n    if (typeof(Promise) !== 'undefined' && Promise.defer) {\n        //need import of Promise.jsm for example: Cu.import('resource:/gree/modules/Promise.jsm');\n        return Promise.defer();\n    } else if (typeof(PromiseUtils) !== 'undefined'  && PromiseUtils.defer) { // eslint-disable-line no-undef\n        //need import of PromiseUtils.jsm for example: Cu.import('resource:/gree/modules/PromiseUtils.jsm');\n        return PromiseUtils.defer(); // eslint-disable-line no-undef\n    } else {\n        /* A method to resolve the associated Promise with the value passed.\n         * If the promise is already settled it does nothing.\n         *\n         * @param {anything} value : This value is used to resolve the promise\n         * If the value is a Promise then the associated promise assumes the state\n         * of Promise passed as value.\n         */\n        this.resolve = null;\n\n        /* A method to reject the assocaited Promise with the value passed.\n         * If the promise is already settled it does nothing.\n         *\n         * @param {anything} reason: The reason for the rejection of the Promise.\n         * Generally its an Error object. If however a Promise is passed, then the Promise\n         * itself will be the reason for rejection no matter the state of the Promise.\n         */\n        this.reject = null;\n\n        /* A newly created Promise object.\n         * Initially in pending state.\n         */\n        this.promise = new Promise(function(resolve, reject) {\n            this.resolve = resolve;\n            this.reject = reject;\n        }.bind(this));\n        Object.freeze(this);\n    }\n};\n\nexport default Deferred;","// JSZip and JSZipUtils are external dependencies\n//import * as JSZip from 'jszip';\n//import JSZipUtils from 'jszip-utils';\nimport Deferred from '../utilities/deferred.js';\n// import jsmediatags from 'jsmediatags';\n\nconst getDataFile = function(filePath) {\n  const deferred = new Deferred();\n  JSZipUtils.getBinaryContent(filePath, (err, data) => {\n    if (err) {\n      deferred.reject(new Error(`There was an error retrieving ${filePath}`, err));\n      return;\n    }\n    deferred.resolve(data);\n  });\n  return deferred.promise;\n};\n\nconst loadZipBuffer = function(fileBuffer) {\n  return JSZip.loadAsync(fileBuffer).catch(error =>\n    Promise.reject(new Error(`There was an error reading the zip file.`, error))\n  );\n};\n\nconst loadAudio = function(zipEntry) {\n  return zipEntry\n    .async('arraybuffer')\n    .catch(() => Promise.reject(new Error(`Unable to load the audio file`)));\n};\n\nconst getFallbackTagData = function(name) {\n  const parts = name.split(' - ');\n  const tag = { tags: {} };\n  // most downloaded cdgs have filenames 'album - artist - songtitle\n  tag.tags.album = parts[0].trim();\n  tag.tags.artist = parts[1] ? parts[1].trim() : tag.tags.album;\n  tag.tags.title = parts[2] ? parts[2].trim() : tag.tags.artist;\n  return tag;\n};\n\nconst getTagData = function(zipEntry) {\n  return zipEntry\n    .async('blob')\n    .then(\n      buffer =>\n        new Promise(resolve => {\n          new jsmediatags.Reader(buffer)\n            .setTagsToRead(['title', 'artist', 'album', 'track', 'year', 'genre', 'picture'])\n            .read({\n              onSuccess: tag => resolve(tag),\n              onError: () => resolve(getFallbackTagData(zipEntry.name))\n            });\n        })\n    )\n    .catch(() => Promise.reject(new Error('Unable to parse tag data')));\n};\n\nconst loadVideo = function(zipEntry) {\n  return zipEntry\n    .async('uint8array')\n    .catch(() => Promise.reject(new Error(`Unable to load the video file`)));\n};\n\nconst getKaraokeFiles = function(zipFile) {\n  const entries = zipFile.filter(relPath => relPath.endsWith('.cdg') || relPath.endsWith('.mp3'));\n  if (entries.length === 2) {\n    return Promise.resolve(entries);\n  }\n  return Promise.reject(`The file is not a karaoke .zip file`);\n};\n\nconst processZip = function(entries) {\n  const audio = entries.filter(entry => entry.name.endsWith('.mp3'));\n  const video = entries.filter(entry => entry.name.endsWith('.cdg'));\n  const process = [];\n  if (audio.length && video.length) {\n    process.push(loadAudio(audio[0]));\n    process.push(loadVideo(video[0]));\n    process.push(getTagData(audio[0]));\n    return Promise.all(process).catch(() =>\n      Promise.reject(new Error(`Processing audio and video failed`))\n    );\n  }\n  const errors = [];\n  if (!audio.length) {\n    errors.push('No mp3 audio file present.');\n  }\n  if (!video.length) {\n    errors.push('No cdg video file present.');\n  }\n  return Promise.reject(new Error(errors.join(' ')));\n};\n\nexport default class CDGFileLoader {\n  static loadZipFile(filePath) {\n    return getDataFile(filePath)\n      .then(fileBuffer => loadZipBuffer(fileBuffer))\n      .then(zipFile => getKaraokeFiles(zipFile))\n      .then(entries => processZip(entries))\n      .catch(error => Promise.reject(error));\n  }\n\n  static loadFileBuffer(fileBuffer) {\n    return loadZipBuffer(fileBuffer)\n      .then(zipFile => getKaraokeFiles(zipFile))\n      .then(entries => processZip(entries))\n      .catch(err => Promise.reject(err));\n  }\n}\n","/*\n * SoundTouch JS v0.1.4 audio processing library\n * Copyright (c) Olli Parviainen\n * Copyright (c) Ryan Berdeen\n * Copyright (c) Jakub Fiala\n * Copyright (c) Steve 'Cutter' Blades\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n */\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar FifoSampleBuffer = function () {\n  function FifoSampleBuffer() {\n    classCallCheck(this, FifoSampleBuffer);\n    this._vector = new Float32Array();\n    this._position = 0;\n    this._frameCount = 0;\n  }\n  createClass(FifoSampleBuffer, [{\n    key: \"clear\",\n    value: function clear() {\n      this.receive(this._frameCount);\n      this.rewind();\n    }\n  }, {\n    key: \"put\",\n    value: function put(numFrames) {\n      this._frameCount += numFrames;\n    }\n  }, {\n    key: \"putSamples\",\n    value: function putSamples(samples, position) {\n      var numFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      position = position || 0;\n      var sourceOffset = position * 2;\n      if (!(numFrames >= 0)) {\n        numFrames = (samples.length - sourceOffset) / 2;\n      }\n      var numSamples = numFrames * 2;\n      this.ensureCapacity(numFrames + this._frameCount);\n      var destOffset = this.endIndex;\n      this.vector.set(samples.subarray(sourceOffset, sourceOffset + numSamples), destOffset);\n      this._frameCount += numFrames;\n    }\n  }, {\n    key: \"putBuffer\",\n    value: function putBuffer(buffer, position) {\n      var numFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      position = position || 0;\n      if (!(numFrames >= 0)) {\n        numFrames = buffer.frameCount - position;\n      }\n      this.putSamples(buffer.vector, buffer.position + position, numFrames);\n    }\n  }, {\n    key: \"receive\",\n    value: function receive(numFrames) {\n      if (!(numFrames >= 0) || numFrames > this._frameCount) {\n        numFrames = this.frameCount;\n      }\n      this._frameCount -= numFrames;\n      this._position += numFrames;\n    }\n  }, {\n    key: \"receiveSamples\",\n    value: function receiveSamples(output) {\n      var numFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var numSamples = numFrames * 2;\n      var sourceOffset = this.startIndex;\n      output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n      this.receive(numFrames);\n    }\n  }, {\n    key: \"extract\",\n    value: function extract(output) {\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var numFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var sourceOffset = this.startIndex + position * 2;\n      var numSamples = numFrames * 2;\n      output.set(this._vector.subarray(sourceOffset, sourceOffset + numSamples));\n    }\n  }, {\n    key: \"ensureCapacity\",\n    value: function ensureCapacity() {\n      var numFrames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var minLength = parseInt(numFrames * 2);\n      if (this._vector.length < minLength) {\n        var newVector = new Float32Array(minLength);\n        newVector.set(this._vector.subarray(this.startIndex, this.endIndex));\n        this._vector = newVector;\n        this._position = 0;\n      } else {\n        this.rewind();\n      }\n    }\n  }, {\n    key: \"ensureAdditionalCapacity\",\n    value: function ensureAdditionalCapacity() {\n      var numFrames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.ensureCapacity(this._frameCount + numFrames);\n    }\n  }, {\n    key: \"rewind\",\n    value: function rewind() {\n      if (this._position > 0) {\n        this._vector.set(this._vector.subarray(this.startIndex, this.endIndex));\n        this._position = 0;\n      }\n    }\n  }, {\n    key: \"vector\",\n    get: function get$$1() {\n      return this._vector;\n    }\n  }, {\n    key: \"position\",\n    get: function get$$1() {\n      return this._position;\n    }\n  }, {\n    key: \"startIndex\",\n    get: function get$$1() {\n      return this._position * 2;\n    }\n  }, {\n    key: \"frameCount\",\n    get: function get$$1() {\n      return this._frameCount;\n    }\n  }, {\n    key: \"endIndex\",\n    get: function get$$1() {\n      return (this._position + this._frameCount) * 2;\n    }\n  }]);\n  return FifoSampleBuffer;\n}();\n\nvar AbstractFifoSamplePipe = function () {\n  function AbstractFifoSamplePipe(createBuffers) {\n    classCallCheck(this, AbstractFifoSamplePipe);\n    if (createBuffers) {\n      this._inputBuffer = new FifoSampleBuffer();\n      this._outputBuffer = new FifoSampleBuffer();\n    } else {\n      this._inputBuffer = this._outputBuffer = null;\n    }\n  }\n  createClass(AbstractFifoSamplePipe, [{\n    key: 'clear',\n    value: function clear() {\n      this._inputBuffer.clear();\n      this._outputBuffer.clear();\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get$$1() {\n      return this._inputBuffer;\n    },\n    set: function set$$1(inputBuffer) {\n      this._inputBuffer = inputBuffer;\n    }\n  }, {\n    key: 'outputBuffer',\n    get: function get$$1() {\n      return this._outputBuffer;\n    },\n    set: function set$$1(outputBuffer) {\n      this._outputBuffer = outputBuffer;\n    }\n  }]);\n  return AbstractFifoSamplePipe;\n}();\n\nvar RateTransposer = function (_AbstractFifoSamplePi) {\n  inherits(RateTransposer, _AbstractFifoSamplePi);\n  function RateTransposer(createBuffers) {\n    classCallCheck(this, RateTransposer);\n    var _this = possibleConstructorReturn(this, (RateTransposer.__proto__ || Object.getPrototypeOf(RateTransposer)).call(this, createBuffers));\n    _this.reset();\n    _this._rate = 1;\n    return _this;\n  }\n  createClass(RateTransposer, [{\n    key: 'reset',\n    value: function reset() {\n      this.slopeCount = 0;\n      this.prevSampleL = 0;\n      this.prevSampleR = 0;\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var result = new RateTransposer();\n      result.rate = this._rate;\n      return result;\n    }\n  }, {\n    key: 'process',\n    value: function process() {\n      var numFrames = this._inputBuffer.frameCount;\n      this._outputBuffer.ensureAdditionalCapacity(numFrames / this._rate + 1);\n      var numFramesOutput = this.transpose(numFrames);\n      this._inputBuffer.receive();\n      this._outputBuffer.put(numFramesOutput);\n    }\n  }, {\n    key: 'transpose',\n    value: function transpose() {\n      var numFrames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (numFrames === 0) {\n        return 0;\n      }\n      var src = this._inputBuffer.vector;\n      var srcOffset = this._inputBuffer.startIndex;\n      var dest = this._outputBuffer.vector;\n      var destOffset = this._outputBuffer.endIndex;\n      var used = 0;\n      var i = 0;\n      while (this.slopeCount < 1.0) {\n        dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * this.prevSampleL + this.slopeCount * src[srcOffset];\n        dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * this.prevSampleR + this.slopeCount * src[srcOffset + 1];\n        i = i + 1;\n        this.slopeCount += this._rate;\n      }\n      this.slopeCount -= 1.0;\n      if (numFrames !== 1) {\n        out: while (true) {\n          while (this.slopeCount > 1.0) {\n            this.slopeCount -= 1.0;\n            used = used + 1;\n            if (used >= numFrames - 1) {\n              break out;\n            }\n          }\n          var srcIndex = srcOffset + 2 * used;\n          dest[destOffset + 2 * i] = (1.0 - this.slopeCount) * src[srcIndex] + this.slopeCount * src[srcIndex + 2];\n          dest[destOffset + 2 * i + 1] = (1.0 - this.slopeCount) * src[srcIndex + 1] + this.slopeCount * src[srcIndex + 3];\n          i = i + 1;\n          this.slopeCount += this._rate;\n        }\n      }\n      this.prevSampleL = src[srcOffset + 2 * numFrames - 2];\n      this.prevSampleR = src[srcOffset + 2 * numFrames - 1];\n      return i;\n    }\n  }, {\n    key: 'rate',\n    set: function set$$1(rate) {\n      this._rate = rate;\n    }\n  }]);\n  return RateTransposer;\n}(AbstractFifoSamplePipe);\n\nvar FilterSupport = function () {\n  function FilterSupport(pipe) {\n    classCallCheck(this, FilterSupport);\n    this._pipe = pipe;\n  }\n  createClass(FilterSupport, [{\n    key: 'fillInputBuffer',\n    value: function fillInputBuffer()              {\n      throw new Error('fillInputBuffer() not overridden');\n    }\n  }, {\n    key: 'fillOutputBuffer',\n    value: function fillOutputBuffer() {\n      var numFrames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      while (this.outputBuffer.frameCount < numFrames) {\n        var numInputFrames = 8192 * 2 - this.inputBuffer.frameCount;\n        this.fillInputBuffer(numInputFrames);\n        if (this.inputBuffer.frameCount < 8192 * 2) {\n          break;\n        }\n        this._pipe.process();\n      }\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._pipe.clear();\n    }\n  }, {\n    key: 'pipe',\n    get: function get$$1() {\n      return this._pipe;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get$$1() {\n      return this._pipe.inputBuffer;\n    }\n  }, {\n    key: 'outputBuffer',\n    get: function get$$1() {\n      return this._pipe.outputBuffer;\n    }\n  }]);\n  return FilterSupport;\n}();\n\nvar noop = function noop() {\n  return;\n};\n\nvar SimpleFilter = function (_FilterSupport) {\n  inherits(SimpleFilter, _FilterSupport);\n  function SimpleFilter(sourceSound, pipe) {\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n    classCallCheck(this, SimpleFilter);\n    var _this = possibleConstructorReturn(this, (SimpleFilter.__proto__ || Object.getPrototypeOf(SimpleFilter)).call(this, pipe));\n    _this.callback = callback;\n    _this.sourceSound = sourceSound;\n    _this.historyBufferSize = 22050;\n    _this._sourcePosition = 0;\n    _this.outputBufferPosition = 0;\n    _this._position = 0;\n    return _this;\n  }\n  createClass(SimpleFilter, [{\n    key: 'onEnd',\n    value: function onEnd() {\n      this.callback();\n    }\n  }, {\n    key: 'fillInputBuffer',\n    value: function fillInputBuffer() {\n      var numFrames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var samples = new Float32Array(numFrames * 2);\n      var numFramesExtracted = this.sourceSound.extract(samples, numFrames, this._sourcePosition);\n      this._sourcePosition += numFramesExtracted;\n      this.inputBuffer.putSamples(samples, 0, numFramesExtracted);\n    }\n  }, {\n    key: 'extract',\n    value: function extract(target) {\n      var numFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.fillOutputBuffer(this.outputBufferPosition + numFrames);\n      var numFramesExtracted = Math.min(numFrames, this.outputBuffer.frameCount - this.outputBufferPosition);\n      this.outputBuffer.extract(target, this.outputBufferPosition, numFramesExtracted);\n      var currentFrames = this.outputBufferPosition + numFramesExtracted;\n      this.outputBufferPosition = Math.min(this.historyBufferSize, currentFrames);\n      this.outputBuffer.receive(Math.max(currentFrames - this.historyBufferSize, 0));\n      this._position += numFramesExtracted;\n      return numFramesExtracted;\n    }\n  }, {\n    key: 'handleSampleData',\n    value: function handleSampleData(event) {\n      this.extract(event.data, 4096);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      get(SimpleFilter.prototype.__proto__ || Object.getPrototypeOf(SimpleFilter.prototype), 'clear', this).call(this);\n      this.outputBufferPosition = 0;\n    }\n  }, {\n    key: 'position',\n    get: function get$$1() {\n      return this._position;\n    },\n    set: function set$$1(position) {\n      if (position > this._position) {\n        throw new RangeError('New position may not be greater than current position');\n      }\n      var newOutputBufferPosition = this.outputBufferPosition - (this._position - position);\n      if (newOutputBufferPosition < 0) {\n        throw new RangeError('New position falls outside of history buffer');\n      }\n      this.outputBufferPosition = newOutputBufferPosition;\n      this._position = position;\n    }\n  }, {\n    key: 'sourcePosition',\n    get: function get$$1() {\n      return this._sourcePosition;\n    },\n    set: function set$$1(sourcePosition) {\n      this.clear();\n      this._sourcePosition = sourcePosition;\n    }\n  }]);\n  return SimpleFilter;\n}(FilterSupport);\n\nvar USE_AUTO_SEQUENCE_LEN = 0;\nvar DEFAULT_SEQUENCE_MS = USE_AUTO_SEQUENCE_LEN;\nvar USE_AUTO_SEEKWINDOW_LEN = 0;\nvar DEFAULT_SEEKWINDOW_MS = USE_AUTO_SEEKWINDOW_LEN;\nvar DEFAULT_OVERLAP_MS = 8;\nvar _SCAN_OFFSETS = [[124, 186, 248, 310, 372, 434, 496, 558, 620, 682, 744, 806, 868, 930, 992, 1054, 1116, 1178, 1240, 1302, 1364, 1426, 1488, 0], [-100, -75, -50, -25, 25, 50, 75, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-20, -15, -10, -5, 5, 10, 15, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-4, -3, -2, -1, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nvar AUTOSEQ_TEMPO_LOW = 0.5;\nvar AUTOSEQ_TEMPO_TOP = 2.0;\nvar AUTOSEQ_AT_MIN = 125.0;\nvar AUTOSEQ_AT_MAX = 50.0;\nvar AUTOSEQ_K = (AUTOSEQ_AT_MAX - AUTOSEQ_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\nvar AUTOSEQ_C = AUTOSEQ_AT_MIN - AUTOSEQ_K * AUTOSEQ_TEMPO_LOW;\nvar AUTOSEEK_AT_MIN = 25.0;\nvar AUTOSEEK_AT_MAX = 15.0;\nvar AUTOSEEK_K = (AUTOSEEK_AT_MAX - AUTOSEEK_AT_MIN) / (AUTOSEQ_TEMPO_TOP - AUTOSEQ_TEMPO_LOW);\nvar AUTOSEEK_C = AUTOSEEK_AT_MIN - AUTOSEEK_K * AUTOSEQ_TEMPO_LOW;\nvar Stretch = function (_AbstractFifoSamplePi) {\n  inherits(Stretch, _AbstractFifoSamplePi);\n  function Stretch(createBuffers) {\n    classCallCheck(this, Stretch);\n    var _this = possibleConstructorReturn(this, (Stretch.__proto__ || Object.getPrototypeOf(Stretch)).call(this, createBuffers));\n    _this._quickSeek = true;\n    _this.midBufferDirty = false;\n    _this.midBuffer = null;\n    _this.overlapLength = 0;\n    _this.autoSeqSetting = true;\n    _this.autoSeekSetting = true;\n    _this._tempo = 1;\n    _this.setParameters(44100, DEFAULT_SEQUENCE_MS, DEFAULT_SEEKWINDOW_MS, DEFAULT_OVERLAP_MS);\n    return _this;\n  }\n  createClass(Stretch, [{\n    key: 'clear',\n    value: function clear() {\n      get(Stretch.prototype.__proto__ || Object.getPrototypeOf(Stretch.prototype), 'clear', this).call(this);\n      this.clearMidBuffer();\n    }\n  }, {\n    key: 'clearMidBuffer',\n    value: function clearMidBuffer() {\n      if (this.midBufferDirty) {\n        this.midBufferDirty = false;\n        this.midBuffer = null;\n      }\n    }\n  }, {\n    key: 'setParameters',\n    value: function setParameters(sampleRate, sequenceMs, seekWindowMs, overlapMs) {\n      if (sampleRate > 0) {\n        this.sampleRate = sampleRate;\n      }\n      if (overlapMs > 0) {\n        this.overlapMs = overlapMs;\n      }\n      if (sequenceMs > 0) {\n        this.sequenceMs = sequenceMs;\n        this.autoSeqSetting = false;\n      } else {\n        this.autoSeqSetting = true;\n      }\n      if (seekWindowMs > 0) {\n        this.seekWindowMs = seekWindowMs;\n        this.autoSeekSetting = false;\n      } else {\n        this.autoSeekSetting = true;\n      }\n      this.calculateSequenceParameters();\n      this.calculateOverlapLength(this.overlapMs);\n      this.tempo = this._tempo;\n    }\n  }, {\n    key: 'calculateOverlapLength',\n    value: function calculateOverlapLength() {\n      var overlapInMsec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var newOvl = void 0;\n      newOvl = this.sampleRate * overlapInMsec / 1000;\n      newOvl = newOvl < 16 ? 16 : newOvl;\n      newOvl -= newOvl % 8;\n      this.overlapLength = newOvl;\n      this.refMidBuffer = new Float32Array(this.overlapLength * 2);\n      this.midBuffer = new Float32Array(this.overlapLength * 2);\n    }\n  }, {\n    key: 'checkLimits',\n    value: function checkLimits(x, mi, ma) {\n      return x < mi ? mi : x > ma ? ma : x;\n    }\n  }, {\n    key: 'calculateSequenceParameters',\n    value: function calculateSequenceParameters() {\n      var seq = void 0;\n      var seek = void 0;\n      if (this.autoSeqSetting) {\n        seq = AUTOSEQ_C + AUTOSEQ_K * this._tempo;\n        seq = this.checkLimits(seq, AUTOSEQ_AT_MAX, AUTOSEQ_AT_MIN);\n        this.sequenceMs = Math.floor(seq + 0.5);\n      }\n      if (this.autoSeekSetting) {\n        seek = AUTOSEEK_C + AUTOSEEK_K * this._tempo;\n        seek = this.checkLimits(seek, AUTOSEEK_AT_MAX, AUTOSEEK_AT_MIN);\n        this.seekWindowMs = Math.floor(seek + 0.5);\n      }\n      this.seekWindowLength = Math.floor(this.sampleRate * this.sequenceMs / 1000);\n      this.seekLength = Math.floor(this.sampleRate * this.seekWindowMs / 1000);\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var result = new Stretch();\n      result.tempo = this._tempo;\n      result.setParameters(this.sampleRate, this.sequenceMs, this.seekWindowMs, this.overlapMs);\n      return result;\n    }\n  }, {\n    key: 'seekBestOverlapPosition',\n    value: function seekBestOverlapPosition() {\n      return this._quickSeek ? this.seekBestOverlapPositionStereoQuick() : this.seekBestOverlapPositionStereo();\n    }\n  }, {\n    key: 'seekBestOverlapPositionStereo',\n    value: function seekBestOverlapPositionStereo() {\n      var bestOffset = void 0;\n      var bestCorrelation = void 0;\n      var correlation = void 0;\n      var i = 0;\n      this.preCalculateCorrelationReferenceStereo();\n      bestOffset = 0;\n      bestCorrelation = Number.MIN_VALUE;\n      for (; i < this.seekLength; i = i + 1) {\n        correlation = this.calculateCrossCorrelationStereo(2 * i, this.refMidBuffer);\n        if (correlation > bestCorrelation) {\n          bestCorrelation = correlation;\n          bestOffset = i;\n        }\n      }\n      return bestOffset;\n    }\n  }, {\n    key: 'seekBestOverlapPositionStereoQuick',\n    value: function seekBestOverlapPositionStereoQuick() {\n      var bestOffset = void 0;\n      var bestCorrelation = void 0;\n      var correlation = void 0;\n      var scanCount = 0;\n      var correlationOffset = void 0;\n      var tempOffset = void 0;\n      this.preCalculateCorrelationReferenceStereo();\n      bestCorrelation = Number.MIN_VALUE;\n      bestOffset = 0;\n      correlationOffset = 0;\n      tempOffset = 0;\n      for (; scanCount < 4; scanCount = scanCount + 1) {\n        var j = 0;\n        while (_SCAN_OFFSETS[scanCount][j]) {\n          tempOffset = correlationOffset + _SCAN_OFFSETS[scanCount][j];\n          if (tempOffset >= this.seekLength) {\n            break;\n          }\n          correlation = this.calculateCrossCorrelationStereo(2 * tempOffset, this.refMidBuffer);\n          if (correlation > bestCorrelation) {\n            bestCorrelation = correlation;\n            bestOffset = tempOffset;\n          }\n          j = j + 1;\n        }\n        correlationOffset = bestOffset;\n      }\n      return bestOffset;\n    }\n  }, {\n    key: 'preCalculateCorrelationReferenceStereo',\n    value: function preCalculateCorrelationReferenceStereo() {\n      var i = 0;\n      var context = void 0;\n      var temp = void 0;\n      for (; i < this.overlapLength; i = i + 1) {\n        temp = i * (this.overlapLength - i);\n        context = i * 2;\n        this.refMidBuffer[context] = this.midBuffer[context] * temp;\n        this.refMidBuffer[context + 1] = this.midBuffer[context + 1] * temp;\n      }\n    }\n  }, {\n    key: 'calculateCrossCorrelationStereo',\n    value: function calculateCrossCorrelationStereo(mixingPosition, compare) {\n      var mixing = this._inputBuffer.vector;\n      mixingPosition += this._inputBuffer.startIndex;\n      var correlation = 0;\n      var i = 2;\n      var calcLength = 2 * this.overlapLength;\n      var mixingOffset = void 0;\n      for (; i < calcLength; i = i + 2) {\n        mixingOffset = i + mixingPosition;\n        correlation += mixing[mixingOffset] * compare[i] + mixing[mixingOffset + 1] * compare[i + 1];\n      }\n      return correlation;\n    }\n  }, {\n    key: 'overlap',\n    value: function overlap(overlapPosition) {\n      this.overlapStereo(2 * overlapPosition);\n    }\n  }, {\n    key: 'overlapStereo',\n    value: function overlapStereo(inputPosition) {\n      var input = this._inputBuffer.vector;\n      inputPosition += this._inputBuffer.startIndex;\n      var output = this._outputBuffer.vector;\n      var outputPosition = this._outputBuffer.endIndex;\n      var i = 0;\n      var context = void 0;\n      var tempFrame = void 0;\n      var frameScale = 1 / this.overlapLength;\n      var fi = void 0;\n      var inputOffset = void 0;\n      var outputOffset = void 0;\n      for (; i < this.overlapLength; i = i + 1) {\n        tempFrame = (this.overlapLength - i) * frameScale;\n        fi = i * frameScale;\n        context = 2 * i;\n        inputOffset = context + inputPosition;\n        outputOffset = context + outputPosition;\n        output[outputOffset + 0] = input[inputOffset + 0] * fi + this.midBuffer[context + 0] * tempFrame;\n        output[outputOffset + 1] = input[inputOffset + 1] * fi + this.midBuffer[context + 1] * tempFrame;\n      }\n    }\n  }, {\n    key: 'process',\n    value: function process() {\n      var offset = void 0;\n      var temp = void 0;\n      var overlapSkip = void 0;\n      if (this.midBuffer === null) {\n        if (this._inputBuffer.frameCount < this.overlapLength) {\n          return;\n        }\n        this.midBuffer = new Float32Array(this.overlapLength * 2);\n        this._inputBuffer.receiveSamples(this.midBuffer, this.overlapLength);\n      }\n      while (this._inputBuffer.frameCount >= this.sampleReq) {\n        offset = this.seekBestOverlapPosition();\n        this._outputBuffer.ensureAdditionalCapacity(this.overlapLength);\n        this.overlap(Math.floor(offset));\n        this._outputBuffer.put(this.overlapLength);\n        temp = this.seekWindowLength - 2 * this.overlapLength;\n        if (temp > 0) {\n          this._outputBuffer.putBuffer(this._inputBuffer, offset + this.overlapLength, temp);\n        }\n        var start = this._inputBuffer.startIndex + 2 * (offset + this.seekWindowLength - this.overlapLength);\n        this.midBuffer.set(this._inputBuffer.vector.subarray(start, start + 2 * this.overlapLength));\n        this.skipFract += this.nominalSkip;\n        overlapSkip = Math.floor(this.skipFract);\n        this.skipFract -= overlapSkip;\n        this._inputBuffer.receive(overlapSkip);\n      }\n    }\n  }, {\n    key: 'tempo',\n    set: function set$$1(newTempo) {\n      var intskip = void 0;\n      this._tempo = newTempo;\n      this.calculateSequenceParameters();\n      this.nominalSkip = this._tempo * (this.seekWindowLength - this.overlapLength);\n      this.skipFract = 0;\n      intskip = Math.floor(this.nominalSkip + 0.5);\n      this.sampleReq = Math.max(intskip + this.overlapLength, this.seekWindowLength) + this.seekLength;\n    },\n    get: function get$$1() {\n      return this._tempo;\n    }\n  }, {\n    key: 'inputChunkSize',\n    get: function get$$1() {\n      return this.sampleReq;\n    }\n  }, {\n    key: 'outputChunkSize',\n    get: function get$$1() {\n      return this.overlapLength + Math.max(0, this.seekWindowLength - 2 * this.overlapLength);\n    }\n  }, {\n    key: 'quickSeek',\n    set: function set$$1(enable) {\n      this._quickSeek = enable;\n    }\n  }]);\n  return Stretch;\n}(AbstractFifoSamplePipe);\n\nvar testFloatEqual = function testFloatEqual(a, b) {\n  return (a > b ? a - b : b - a) > 1e-10;\n};\n\nvar SoundTouch = function () {\n  function SoundTouch() {\n    classCallCheck(this, SoundTouch);\n    this.transposer = new RateTransposer(false);\n    this.stretch = new Stretch(false);\n    this._inputBuffer = new FifoSampleBuffer();\n    this._intermediateBuffer = new FifoSampleBuffer();\n    this._outputBuffer = new FifoSampleBuffer();\n    this._rate = 0;\n    this._tempo = 0;\n    this.virtualPitch = 1.0;\n    this.virtualRate = 1.0;\n    this.virtualTempo = 1.0;\n    this.calculateEffectiveRateAndTempo();\n  }\n  createClass(SoundTouch, [{\n    key: 'clear',\n    value: function clear() {\n      this.transposer.clear();\n      this.stretch.clear();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var result = new SoundTouch();\n      result.rate = this.rate;\n      result.tempo = this.tempo;\n      return result;\n    }\n  }, {\n    key: 'calculateEffectiveRateAndTempo',\n    value: function calculateEffectiveRateAndTempo() {\n      var previousTempo = this._tempo;\n      var previousRate = this._rate;\n      this._tempo = this.virtualTempo / this.virtualPitch;\n      this._rate = this.virtualRate * this.virtualPitch;\n      if (testFloatEqual(this._tempo, previousTempo)) {\n        this.stretch.tempo = this._tempo;\n      }\n      if (testFloatEqual(this._rate, previousRate)) {\n        this.transposer.rate = this._rate;\n      }\n      if (this._rate > 1.0) {\n        if (this._outputBuffer != this.transposer.outputBuffer) {\n          this.stretch.inputBuffer = this._inputBuffer;\n          this.stretch.outputBuffer = this._intermediateBuffer;\n          this.transposer.inputBuffer = this._intermediateBuffer;\n          this.transposer.outputBuffer = this._outputBuffer;\n        }\n      } else {\n        if (this._outputBuffer != this.stretch.outputBuffer) {\n          this.transposer.inputBuffer = this._inputBuffer;\n          this.transposer.outputBuffer = this._intermediateBuffer;\n          this.stretch.inputBuffer = this._intermediateBuffer;\n          this.stretch.outputBuffer = this._outputBuffer;\n        }\n      }\n    }\n  }, {\n    key: 'process',\n    value: function process() {\n      if (this._rate > 1.0) {\n        this.stretch.process();\n        this.transposer.process();\n      } else {\n        this.transposer.process();\n        this.stretch.process();\n      }\n    }\n  }, {\n    key: 'rate',\n    get: function get$$1() {\n      return this._rate;\n    },\n    set: function set$$1(rate) {\n      this.virtualRate = rate;\n      this.calculateEffectiveRateAndTempo();\n    }\n  }, {\n    key: 'rateChange',\n    set: function set$$1(rateChange) {\n      this._rate = 1.0 + 0.01 * rateChange;\n    }\n  }, {\n    key: 'tempo',\n    get: function get$$1() {\n      return this._tempo;\n    },\n    set: function set$$1(tempo) {\n      this.virtualTempo = tempo;\n      this.calculateEffectiveRateAndTempo();\n    }\n  }, {\n    key: 'tempoChange',\n    set: function set$$1(tempoChange) {\n      this.tempo = 1.0 + 0.01 * tempoChange;\n    }\n  }, {\n    key: 'pitch',\n    set: function set$$1(pitch) {\n      this.virtualPitch = pitch;\n      this.calculateEffectiveRateAndTempo();\n    }\n  }, {\n    key: 'pitchOctaves',\n    set: function set$$1(pitchOctaves) {\n      this.pitch = Math.exp(0.69314718056 * pitchOctaves);\n      this.calculateEffectiveRateAndTempo();\n    }\n  }, {\n    key: 'pitchSemitones',\n    set: function set$$1(pitchSemitones) {\n      this.pitchOctaves = pitchSemitones / 12.0;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get$$1() {\n      return this._inputBuffer;\n    }\n  }, {\n    key: 'outputBuffer',\n    get: function get$$1() {\n      return this._outputBuffer;\n    }\n  }]);\n  return SoundTouch;\n}();\n\nvar WebAudioBufferSource = function () {\n  function WebAudioBufferSource(buffer) {\n    classCallCheck(this, WebAudioBufferSource);\n    this.buffer = buffer;\n    this._position = 0;\n  }\n  createClass(WebAudioBufferSource, [{\n    key: \"extract\",\n    value: function extract(target) {\n      var numFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.position = position;\n      var left = this.buffer.getChannelData(0);\n      var right = this.dualChannel ? this.buffer.getChannelData(1) : this.buffer.getChannelData(0);\n      var i = 0;\n      for (; i < numFrames; i++) {\n        target[i * 2] = left[i + position];\n        target[i * 2 + 1] = right[i + position];\n      }\n      return Math.min(numFrames, left.length - position);\n    }\n  }, {\n    key: \"dualChannel\",\n    get: function get$$1() {\n      return this.buffer.numberOfChannels > 1;\n    }\n  }, {\n    key: \"position\",\n    get: function get$$1() {\n      return this._position;\n    },\n    set: function set$$1(value) {\n      this._position = value;\n    }\n  }]);\n  return WebAudioBufferSource;\n}();\n\nvar getWebAudioNode = function getWebAudioNode(context, filter) {\n  var sourcePositionCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n  var bufferSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4096;\n  var node = context.createScriptProcessor(bufferSize, 2, 2);\n  var samples = new Float32Array(bufferSize * 2);\n  node.onaudioprocess = function (event) {\n    var left = event.outputBuffer.getChannelData(0);\n    var right = event.outputBuffer.getChannelData(1);\n    var framesExtracted = filter.extract(samples, bufferSize);\n    sourcePositionCallback(filter.sourcePosition);\n    if (framesExtracted === 0) {\n      filter.onEnd();\n    }\n    var i = 0;\n    for (; i < framesExtracted; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n  return node;\n};\n\nvar pad = function pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n};\nvar minsSecs = function minsSecs(secs) {\n  var mins = Math.floor(secs / 60);\n  var seconds = secs - mins * 60;\n  return mins + ':' + pad(parseInt(seconds), 2);\n};\n\nvar onUpdate = function onUpdate(sourcePosition) {\n  var currentTimePlayed = this.timePlayed;\n  var sampleRate = this.sampleRate;\n  this.sourcePosition = sourcePosition;\n  this.timePlayed = sourcePosition / sampleRate;\n  if (currentTimePlayed !== this.timePlayed) {\n    var timePlayed = new CustomEvent('play', {\n      detail: {\n        timePlayed: this.timePlayed,\n        formattedTimePlayed: this.formattedTimePlayed,\n        percentagePlayed: this.percentagePlayed\n      }\n    });\n    this._node.dispatchEvent(timePlayed);\n  }\n};\nvar PitchShifter = function () {\n  function PitchShifter(context, buffer, bufferSize) {\n    var _this = this;\n    var onEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n    classCallCheck(this, PitchShifter);\n    this._soundtouch = new SoundTouch();\n    var source = new WebAudioBufferSource(buffer);\n    this.timePlayed = 0;\n    this.sourcePosition = 0;\n    this._filter = new SimpleFilter(source, this._soundtouch, onEnd);\n    this._node = getWebAudioNode(context, this._filter, function (sourcePostion) {\n      return onUpdate.call(_this, sourcePostion);\n    });\n    this.tempo = 1;\n    this.rate = 1;\n    this.duration = buffer.duration;\n    this.sampleRate = context.sampleRate;\n    this.listeners = [];\n  }\n  createClass(PitchShifter, [{\n    key: 'connect',\n    value: function connect(toNode) {\n      this._node.connect(toNode);\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._node.disconnect();\n    }\n  }, {\n    key: 'on',\n    value: function on(eventName, cb) {\n      this.listeners.push({ name: eventName, cb: cb });\n      this._node.addEventListener(eventName, function (event) {\n        return cb(event.detail);\n      });\n    }\n  }, {\n    key: 'off',\n    value: function off() {\n      var _this2 = this;\n      var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var listeners = this.listeners;\n      if (eventName) {\n        listeners = listeners.filter(function (e) {\n          return e.name === eventName;\n        });\n      }\n      listeners.forEach(function (e) {\n        _this2._node.removeEventListener(e.name, function (event) {\n          return e.cb(event.detail);\n        });\n      });\n    }\n  }, {\n    key: 'formattedDuration',\n    get: function get$$1() {\n      return minsSecs(this.duration);\n    }\n  }, {\n    key: 'formattedTimePlayed',\n    get: function get$$1() {\n      return minsSecs(this.timePlayed);\n    }\n  }, {\n    key: 'percentagePlayed',\n    get: function get$$1() {\n      return 100 * this._filter.sourcePosition / (this.duration * this.sampleRate);\n    },\n    set: function set$$1(perc) {\n      this._filter.sourcePosition = parseInt(perc * this.duration * this.sampleRate);\n    }\n  }, {\n    key: 'node',\n    get: function get$$1() {\n      return this._node;\n    }\n  }, {\n    key: 'pitch',\n    set: function set$$1(pitch) {\n      this._soundtouch.pitch = pitch;\n    }\n  }, {\n    key: 'pitchSemitones',\n    set: function set$$1(semitone) {\n      this._soundtouch.pitchSemitones = semitone;\n    }\n  }, {\n    key: 'rate',\n    set: function set$$1(rate) {\n      this._soundtouch.rate = rate;\n    }\n  }, {\n    key: 'tempo',\n    set: function set$$1(tempo) {\n      this._soundtouch.tempo = tempo;\n    }\n  }]);\n  return PitchShifter;\n}();\n\nexport { AbstractFifoSamplePipe, RateTransposer, SimpleFilter, Stretch, SoundTouch, WebAudioBufferSource, PitchShifter, getWebAudioNode };\n//# sourceMappingURL=soundtouch.js.map\n","export const isString = function(value) {\n    return typeof value === 'string';\n};\n\nexport const isNumber = function(value) {\n    return typeof value === 'number';\n};\n\nexport const isDate = function(value) {\n    return toString.call(value) === '[object Date]';\n};\n\nexport const isArray = function(arr) {\n    return Array.isArray(arr);\n};\n\nexport const isFunction = function(value) {\n    return typeof value === 'function';\n};\n\nexport const isBoolean = function(value) {\n    return typeof value === 'boolean';\n};\n\nexport const isDefined = function(value) {\n    return typeof value !== 'undefined';\n};\n\nexport const isUndefined = function(value) {\n    return typeof value === 'undefined';\n};\n\nexport const isObject = function(value) {\n    return value !== null && typeof value === 'object';\n};\n\nexport const isPromise = function(obj) {\n    return (\n        !!obj &&\n        (typeof obj === 'object' || typeof obj === 'function') &&\n        typeof obj.then === 'function'\n    );\n};\n\nexport const isError = function(value) {\n    const tag = toString.call(value);\n    switch (tag) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return value instanceof Error;\n    }\n};\n","// From https://github.com/AntonLapshin/proxy-observable#readme\n/* eslint-disable */\nexport class PubSub {\n    /**\n     * Creates an instance of PubSub\n     */\n    constructor() {\n        this.fns = { any: [] };\n    }\n\n    /**\n     * Checks if a event has at least one subscription\n     *\n     * @param {string} e Event name\n     * @returns {boolean}\n     */\n    has(e) {\n        return (e in this.fns && this.fns[e].length > 0) || this.fns.any.length > 0;\n    }\n\n    /**\n     * Subscribes on event\n     *\n     * @param {string} e Event name\n     * @param {function} fn Callback\n     * @returns {function} Input callback\n     */\n    on(e, fn) {\n        if (e in this.fns === false) {\n            this.fns[e] = [];\n        }\n        this.fns[e].push(fn);\n        return fn;\n    }\n\n    /**\n     * Calls the event's callbacks\n     *\n     * @param {string} e Event name\n     * @param {any} value New value\n     * @param {any} prev Previous value\n     * @returns {object} Observable\n     */\n    fire(e, value, prev) {\n        this.fns.any.concat(e in this.fns ? this.fns[e] : []).forEach(fn => fn(value, prev, e));\n        return this;\n    }\n\n    /**\n     * Unsubscribes from event\n     *\n     * @param {function} fn Callback\n     * @returns {boolean} true if successfully unsubscribed\n     */\n    off(fn) {\n        for (const e in this.fns) {\n            const fns = this.fns[e];\n            for (let i = 0; i < fns.length; i++) {\n                if (fns[i] === fn) {\n                    fns.splice(i, 1);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Subscribes on event once\n     *\n     * @param {string} e Event name\n     * @param {function} fn Callback\n     * @returns {function} Input callback\n     */\n    once(e, fn) {\n        const method = (value, prev, prop) => {\n            fn(value, prev, prop);\n            this.off(method);\n        };\n        this.on(e, method);\n        return fn;\n    }\n}\n","// From https://github.com/AntonLapshin/proxy-observable#readme\n/* eslint-disable */\nimport { PubSub } from './pubsub.js';\n\n/**\n * Creates a proxy observable for an object or array\n *\n * @param {object|Observable} target Input Object\n * @returns {Observable} Observable (ES6 Proxy)\n */\nexport default target => {\n    if (target.on && target.off) {\n        return target;\n    }\n    const pub = new PubSub();\n    const observable = new Proxy(target, {\n        get: (target, prop) => {\n            if (prop in target) {\n                if (target.constructor === Array) {\n                    let v = observable;\n                    if (prop === 'pop') {\n                        v = target[target.length - 1];\n                    } else if (prop === 'shift') {\n                        v = target[0];\n                    }\n                    if (prop !== 'push' && prop !== 'length') {\n                        pub.fire(prop, v);\n                    }\n                }\n                return target[prop];\n            } else if (prop === 'on') {\n                return pub.on.bind(pub);\n            } else if (prop === 'once') {\n                return pub.once.bind(pub);\n            } else if (prop === 'off') {\n                return pub.off.bind(pub);\n            }\n            return undefined;\n        },\n        set: (target, prop, v) => {\n            if (target.constructor === Array) {\n                if (prop !== 'length') {\n                    pub.fire('change', v);\n                }\n            } else if (pub.has(prop)) {\n                pub.fire(prop, v, target[prop]);\n            }\n            target[prop] = v;\n            return true;\n        }\n    });\n\n    return observable;\n};\n","import './karaokeplayer.scss';\nimport CDGPlayer from '../cdg/CDGPlayer.js';\nimport CDGFileLoader from '../loader/CDGFileLoader.js';\nimport { PitchShifter } from 'soundtouchjs';\nimport Deferred from '../utilities/deferred.js';\nimport {\n  WIDTH,\n  HEIGHT,\n  GAIN_DEFAULT,\n  SCALE_DEFAULT,\n  PITCH_DEFAULT,\n  START_TIME,\n  FILTER_PLAYBACK_OFFSET\n} from '../cdg/constants';\nimport { isString } from '../utilities/is.js';\nimport observable from '../observable/observable.js';\n\nconst createDisplayCanvas = function(width, height) {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n};\n\nconst createCanvasContext = function(canvas) {\n  const ctx = canvas.getContext('2d');\n  ctx.webkitImageSmoothingEnabled = false;\n  ctx.mozImageSmoothingEnabled = false;\n  ctx.msImageSmoothingEnabled = false;\n  ctx.imageSmoothingEnabled = false;\n  return ctx;\n};\n\nconst copyContextToCanvas = function(context) {\n  // If there's transparency, clear the canvas first\n  if (context.keyColor >= 0) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  // Copy from source canvas to the target canvas\n  this.ctx.drawImage(\n    context.canvas,\n    0,\n    0,\n    context.canvas.width,\n    context.canvas.height,\n    0,\n    0,\n    this.canvas.width,\n    this.canvas.height\n  );\n};\n\nconst clearCanvas = function(context, canvas) {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n};\n\nconst loadAudio = function(buffer) {\n  if (this.shifter) {\n    this.shifter.off();\n  }\n  return this.audio\n    .decodeAudioData(buffer)\n    .then(audioBuffer => {\n      this.shifter = observable(\n        new PitchShifter(this.audio, audioBuffer, 1024, () => {\n          this.stop();\n        })\n      );\n      this.shifter.on('play', detail => {\n        this.props.timePlayed = detail.formattedTimePlayed;\n        this.props.percentagePlayed = detail.percentagePlayed;\n        this.player.sync(detail.timePlayed * 1000 - FILTER_PLAYBACK_OFFSET);\n      });\n      this.shifter.pitch = PITCH_DEFAULT;\n      this.props.trackLength = this.shifter.formattedDuration;\n    })\n    .catch(error => Promise.reject(new Error(`There was an error decoding the audio file`, error)));\n};\n\nconst loadVideo = function(buffer) {\n  const deferred = new Deferred();\n  if (buffer) {\n    this.player.load(Array.from(buffer));\n    deferred.resolve();\n  } else {\n    deferred.reject(new Error('There was an error loading the video file'));\n  }\n  return deferred.promise;\n};\n\nconst wrapText = function(context, text, x, y, maxWidth, lineHeight) {\n  var words = text.split(' ');\n  var line = '';\n\n  for (var n = 0; n < words.length; n++) {\n    var testLine = line + words[n] + ' ';\n    var metrics = context.measureText(testLine);\n    var testWidth = metrics.width;\n    if (testWidth > maxWidth && n > 0) {\n      context.fillText(line.trim(), x, y);\n      line = words[n] + ' ';\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line.trim(), x, y);\n};\n\nconst drawTag = function() {\n  const ctx = this.ctx;\n  const cvs = this.canvas;\n  const maxWidth = cvs.width - 10;\n  let lineHeight = 30;\n  const x = maxWidth / 2;\n  let y = 30;\n  ctx.font = '30px sans-serif';\n  ctx.fillStyle = '#fff';\n  ctx.textAlign = 'center';\n  wrapText(ctx, this.tag.title, x, y, maxWidth, lineHeight);\n  ctx.font = '20px sans-serif';\n  y = cvs.height - 60;\n  wrapText(ctx, `by ${this.tag.artist}`, x, y, maxWidth, lineHeight);\n};\n\nconst loadTag = function(tag) {\n  this.tag = tag && tag.tags;\n  if (this.tag) {\n    return drawTag.call(this);\n  }\n};\n\nconst handleExtractedZip = function(responseArr) {\n  const process = [];\n  process.push(loadAudio.call(this, responseArr[0])); // audio is always first\n  process.push(loadVideo.call(this, responseArr[1])); // video is always second\n  return Promise.all(process)\n    .then(() => {\n      this.props.status = 'File Loaded';\n      this.props.loaded = true;\n      // Display tag after marking player loaded\n      loadTag.call(this, responseArr[2]); // mp3 tag data is always last\n    })\n    .catch(error => {\n      this.props.status = 'File Loading Failed';\n      return Promise.reject(error);\n    })\n    .then(() => {\n      this.props.loading = false;\n    });\n};\n\n/*const updatePlayPosition = function() {\n  this.props.timePlayed = this.shifter.formattedTimePlayed;\n  this.props.percentagePlayed = this.shifter.percentagePlayed;\n  this.player.sync(this.shifter.timePlayed * 1000 - FILTER_PLAYBACK_OFFSET);\n};*/\n\nconst setVolume = function(val) {\n  this.gainNode.gain.value = val;\n};\n\nexport class KaraokePlayer {\n  audio = null;\n  gainNode = null;\n  shifter = null;\n\n  wrapper = null;\n  player = null;\n  currentSize = SCALE_DEFAULT;\n  canvas = null;\n  ctx = null;\n\n  props = observable({\n    status: '',\n    loaded: false,\n    loading: false,\n    isPlaying: false,\n    timePlayed: START_TIME,\n    trackLength: START_TIME,\n    percentagePlayed: 0,\n    songVolume: 1,\n    destroy: false\n  });\n\n  constructor(selector) {\n    this.wrapper = document.querySelector(selector);\n    if (!this.wrapper) {\n      throw new Error(`CDGPlayer: and element was not found with the \"${selector}\" selector`);\n    }\n    this.wrapper.classList.add('cdg-video-wrapper');\n    this.canvas = createDisplayCanvas(WIDTH, HEIGHT);\n    this.canvas.classList.add('cdg-video-player');\n    this.ctx = createCanvasContext(this.canvas);\n    this.player = new CDGPlayer({\n      afterRender: context => copyContextToCanvas.call(this, context)\n    });\n    this.wrapper.appendChild(this.canvas);\n    const titleImage = document.createElement('div');\n    titleImage.classList.add('titleImage');\n    this.wrapper.appendChild(titleImage);\n    this.onloaded = this.props.on('loaded', val => {\n      if (val) {\n        titleImage.classList.add('hide');\n        return;\n      }\n      titleImage.classList.remove('hide');\n    });\n\n    this.audio = new (window.AudioContext || window.webkitAudioContext)();\n    this.gainNode = this.audio.createGain();\n    this.onvolume = this.props.on('songVolume', val => {\n      setVolume.call(this, val);\n    });\n    this.props.songVolume = GAIN_DEFAULT;\n  }\n\n  destroy() {\n    this.wrapper.classList.remove('cdg-video-wrapper');\n    this.stop();\n    this.gainNode.disconnect();\n    if (this.shifter) {\n      this.shifter.off();\n    }\n    this.shifter = null;\n    this.gainNode = null;\n    this.audio = null;\n    this.canvas.remove();\n    this.props.destroy = true;\n    this.props.off('onvolume');\n  }\n\n  load(filePath) {\n    this.stop();\n    clearCanvas(this.ctx, this.canvas);\n    this.props.loading = true;\n    let promise;\n    if (isString(filePath)) {\n      if (!filePath.toLowerCase().endsWith('.zip')) {\n        this.props.loading = false;\n        this.props.status = `${filePath} doesn't appear to be a \".zip\" file.`;\n\n        return Promise.reject(this.props.status);\n      }\n      this.props.status = 'Retrieving File...';\n      promise = CDGFileLoader.loadZipFile(filePath);\n    } else {\n      this.props.status = `Loading File...`;\n      promise = CDGFileLoader.loadFileBuffer(filePath);\n    }\n    return promise\n      .then(zipResponse => handleExtractedZip.call(this, zipResponse))\n      .catch(error => Promise.reject(error));\n  }\n\n  togglePlay() {\n    if (this.props.isPlaying) {\n      this.pause();\n    } else {\n      this.start();\n    }\n  }\n\n  start() {\n    clearCanvas.call(this, this.ctx, this.canvas);\n    this.shifter.connect(this.gainNode);\n    this.gainNode.connect(this.audio.destination);\n    this.props.isPlaying = true;\n    this.player.play();\n    //this.timeInterval = setInterval(() => updatePlayPosition.call(this), 1);\n  }\n\n  pause(playing = false) {\n    this.props.isPlaying = playing;\n    this.shifter.disconnect();\n    /*if (this.timeInterval) {\n      clearInterval(this.timeInterval);\n      this.timeInterval = null;\n    }*/\n    this.player.stop();\n  }\n\n  stop() {\n    if (this.shifter) {\n      this.pause();\n      this.changePlayerPosition(0);\n      drawTag.call(this);\n    }\n  }\n\n  changePlayerPosition(perc) {\n    perc = perc < 0 ? 0 : perc > 100 ? 100 : perc;\n    this.shifter.percentagePlayed = perc;\n    this.props.percentagePlayed = this.shifter.percentagePlayed;\n    this.props.timePlayed = this.shifter.formattedTimePlayed;\n    this.player.reset();\n    if (!perc) {\n      this.props.isPlaying = false;\n      this.props.timePlayed = START_TIME;\n    }\n  }\n\n  changeKey(pitchChange) {\n    pitchChange = pitchChange < -7 ? -7 : pitchChange > 7 ? 7 : pitchChange;\n    this.shifter.pitchSemitones = pitchChange;\n    this.shifter.tempo = 1; // keep the tempo straight\n  }\n\n  volume(change) {\n    const current = this.gainNode.gain.value;\n    const newValue = +(current + change).toFixed(2);\n    this.props.songVolume = newValue < 0 ? 0 : newValue > 1 ? 1 : newValue;\n  }\n\n  toggleMute() {\n    const fallback = this.gainNode.gain.value;\n    this.props.songVolume = fallback ? 0 : this.fallbackVolume;\n    this.fallbackVolume = fallback;\n  }\n}\n","import ctrlTemplate from './cdgcontrols.html';\nimport './cdgcontrols.scss';\nimport { PANEL_POSITION } from '../cdg/constants.js';\n\nconst playIcon = 'icofont-play-alt-1';\nconst pauseIcon = 'icofont-pause';\n\nconst htmlToElement = function(html) {\n  let template = document.createElement('template');\n  html = html.trim();\n  template.innerHTML = html;\n  return template.content.firstChild;\n};\n\nconst setupListeners = function() {\n  const props = this.player.props;\n  this.onloaded = props.on('loaded', val => {\n    if (val) {\n      this.playBtn.removeAttribute('disabled');\n      this.pitch.removeAttribute('disabled');\n      this.volumeBtn.removeAttribute('disabled');\n    } else {\n      this.playBtn.setAttribute('disabled', 'disabled');\n      this.pitch.setAttribute('disabled', 'disabled');\n      this.volumeBtn.setAttribute('disabled', 'disabled');\n    }\n  });\n  this.ontimeplayed = props.on('timePlayed', (val, prev) => {\n    if (val !== prev) {\n      this.timePlayed.innerHTML = val;\n    }\n  });\n  this.onpercentageplayed = props.on('percentagePlayed', (val, prev) => {\n    if (val !== prev) {\n      this.progress.value = val;\n    }\n  });\n  this.ontracklength = props.on('trackLength', (val, prev) => {\n    if (val !== prev) {\n      this.trackLength.innerHTML = val;\n    }\n  });\n  this.ondestroy = props.on('destroy', val => {\n    if (val) {\n      removeListeners.call(this);\n    }\n  });\n  this.onplay = props.on('isPlaying', val => {\n    this.playIcn.classList.remove(playIcon, pauseIcon);\n    this.playIcn.classList.add(val ? pauseIcon : playIcon);\n  });\n\n  this.onvolume = props.on('songVolume', val => {\n    const icn = this.volumeIcn;\n    this.volumeSlider.value = val;\n    if (val) {\n      if (icn.classList.contains('mute')) {\n        icn.classList.remove('mute');\n        return;\n      }\n      return;\n    }\n    icn.classList.add('mute');\n  });\n\n  this.playBtn.addEventListener('click', () => this.player.togglePlay());\n  this.progress.addEventListener('click', event => changePosition.call(this, event));\n  this.pitch.addEventListener('change', () => changeKey.call(this));\n  this.volumeSlider.addEventListener('change', () => changeVolume.call(this));\n};\n\nconst removeListeners = function() {\n  const props = this.player.props;\n  props.off(this.onloaded);\n  props.off(this.ontimeplayed);\n  props.off(this.onpercentageplayed);\n  props.off(this.ontracklength);\n  props.off(this.ondestroy);\n  props.off(this.onplay);\n  props.off(this.onvolume);\n  this.playBtn.removeEventListener('click', () => this.player.togglePlay());\n  this.progress.removeEventListener('click', event => changePosition.call(this, event));\n  this.pitch.removeEventListener('change', () => changeKey.call(this));\n  this.volumeSlider.removeEventListener('change', () => changeVolume.call(this));\n};\n\nconst changePosition = function(event) {\n  const pos = event.target.getBoundingClientRect();\n  const relX = event.pageX - pos.x;\n  const perc = relX / event.target.offsetWidth;\n  this.player.changePlayerPosition(perc);\n};\n\nconst changeKey = function() {\n  const val = this.pitch.value;\n  if (isNaN(val)) {\n    this.pitch.value = this.fallbackPitch;\n    return;\n  }\n  this.fallbackPitch = val < -7 ? -7 : val > 7 ? 7 : val;\n  this.player.changeKey(this.fallbackPitch);\n};\n\nconst changeVolume = function() {\n  this.player.props.songVolume = +(parseFloat(this.volumeSlider.value) + 0).toFixed(2);\n};\n\nexport default class CDGControls {\n  controls = htmlToElement(ctrlTemplate);\n  player = null;\n\n  playBtn = null;\n  playIcn = null;\n  timePlayed = null;\n  progress = null;\n  trackLength = null;\n  pitch = null;\n\n  constructor(selector, player, options = { position: 'bottom' }) {\n    const wrapper = document.querySelector(selector);\n    wrapper.appendChild(this.controls);\n    this.player = player;\n    const props = this.player.props;\n    this.playBtn = this.controls.querySelector('.playButton');\n    this.playIcn = this.playBtn.querySelector('i');\n    this.timePlayed = this.controls.querySelector('.timePlayed');\n    this.timePlayed.innerHTML = props.timePlayed;\n    this.progress = this.controls.querySelector('.progressMeter');\n    this.progress.value = props.percentagePlayed;\n    this.trackLength = this.controls.querySelector('.trackLength');\n    this.trackLength.innerHTML = props.trackLength;\n    this.pitch = this.controls.querySelector('.pitch');\n    this.fallbackPitch = 0;\n    if (!PANEL_POSITION.includes(options.position)) {\n      throw new Error(`Panel Position must be either 'top' or 'bottom'.`);\n    }\n    this.volumeBtn = this.controls.querySelector('#song_volume_button');\n    this.volumeIcn = this.volumeBtn.querySelector('i');\n    this.volumeSlider = this.controls.querySelector('#song_volume');\n    this.volumeSlider.value = props.songVolume;\n    if (options.position === 'top') {\n      const sliderContainer = this.controls.querySelector('.volumeSlider');\n      sliderContainer.classList.add('under');\n    }\n    setupListeners.call(this);\n  }\n}\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","TILE_WIDTH","TILE_HEIGHT","TILES_X","TILES_Y","TILES_X_BORDER","TILES_Y_BORDER","WIDTH","HEIGHT","BORDER_WIDTH","BORDER_HEIGHT","DISPLAY_WIDTH","DISPLAY_HEIGHT","DISPLAY_BOUNDS","DISPLAY_PIXELS","CDG_NOOP","CDG_MEMORY_PRESET","CDG_BORDER_PRESET","CDG_TILE_BLOCK","CDG_SCROLL_PRESET","CDG_SCROLL_COPY","CDG_SET_KEY_COLOR","CDG_LOAD_CLUT_LOW","CDG_LOAD_CLUT_HI","CDG_TILE_BLOCK_XOR","CDG_SCROLL_NONE","CDG_SCROLL_LEFT","CDG_SCROLL_RIGHT","CDG_SCROLL_UP","CDG_SCROLL_DOWN","CDG_DATA","COMMAND_MASK","CDG_COMMAND","SECTORS_PER_SECOND","PACKETS_PER_SECTOR","PACKET_SIZE","GAIN_DEFAULT","PITCH_DEFAULT","SCALE_DEFAULT","FILTER_PLAYBACK_OFFSET","START_TIME","PANEL_POSITION","CDGContext","width","height","canvas","this","createCanvas","ctx","createCanvasContext","imageData","createImageData","hOffset","vOffset","keyColor","backgroundContainer","borderColor","memoryColor","clut","Array","fill","pixels","buffer","getContext","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","imageSmoothingEnabled","backgroundColor","index","r","g","b","map","c","x","y","colorIndex","right","bottom","offset","pixelIndex","data","putImageData","generateImageData","warn","console","CDGInstruction","bytes","slice","constructor","instruction","opcode","byte","toString","padStart","join","CDGNoopInstruction","CDGMemoryPresetInstruction","doff","color","repeat","context","CDGBorderPresetInstruction","left","top","setPixel","CDGTileBlockInstruction","colors","row","column","i","curbyte","j","op","CDGTileBlockXORInstruction","getPixel","CDGScrollPresetInstruction","hScroll","hCmd","vScroll","vCmd","Math","min","offx","offy","filter","v","CDGScrollCopyInstruction","CDGSetKeyColorInstruction","CDGLoadCLUTLowInstruction","cur","setCLUTEntry","clutOffset","_this10","CDGLoadCLUTHighInstruction","CDGParser","instructionClassByType","InstructionClass","createInstruction","instructions","bytesLength","length","push","parseInstruction","now","performance","process","hrtime","Date","requestFrame","callback","requestAnimationFrame","window","setTimeout","cancelFrame","id","cancelAnimationFrame","clearTimeout","CDGPlayer","contextOptions","createContext","afterRender","pc","frameId","pos","lastSyncPos","lastTimestamp","update","timestamp","_this","ffAmt","floor","fastForward","render","options","parser","parseInstructions","reset","renderFrame","execute","executeInstruction","stop","count","max","step","ms","Deferred","Promise","defer","PromiseUtils","resolve","reject","promise","bind","freeze","getDataFile","filePath","deferred","getBinaryContent","err","Error","loadZipBuffer","fileBuffer","JSZip","loadAsync","catch","error","loadAudio","zipEntry","async","getFallbackTagData","name","parts","split","tag","tags","album","trim","artist","title","getTagData","then","jsmediatags","Reader","setTagsToRead","read","loadVideo","getKaraokeFiles","zipFile","entries","relPath","endsWith","processZip","audio","entry","video","all","errors","CDGFileLoader","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","get","object","property","receiver","Function","desc","Object","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","FifoSampleBuffer","_vector","Float32Array","_position","_frameCount","receive","rewind","numFrames","samples","position","arguments","sourceOffset","numSamples","ensureCapacity","destOffset","endIndex","vector","set","subarray","frameCount","putSamples","output","startIndex","minLength","parseInt","newVector","AbstractFifoSamplePipe","createBuffers","_inputBuffer","_outputBuffer","clear","inputBuffer","outputBuffer","RateTransposer","_AbstractFifoSamplePi","_rate","slopeCount","prevSampleL","prevSampleR","result","rate","ensureAdditionalCapacity","numFramesOutput","transpose","put","src","srcOffset","dest","used","out","srcIndex","FilterSupport","pipe","_pipe","numInputFrames","fillInputBuffer","noop","SimpleFilter","_FilterSupport","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","numFramesExtracted","extract","fillOutputBuffer","currentFrames","event","RangeError","newOutputBufferPosition","sourcePosition","USE_AUTO_SEQUENCE_LEN","DEFAULT_SEQUENCE_MS","USE_AUTO_SEEKWINDOW_LEN","DEFAULT_SEEKWINDOW_MS","DEFAULT_OVERLAP_MS","_SCAN_OFFSETS","AUTOSEQ_TEMPO_LOW","AUTOSEQ_TEMPO_TOP","AUTOSEQ_AT_MIN","AUTOSEQ_AT_MAX","AUTOSEQ_K","AUTOSEQ_C","AUTOSEEK_AT_MIN","AUTOSEEK_AT_MAX","AUTOSEEK_K","AUTOSEEK_C","Stretch","_quickSeek","midBufferDirty","midBuffer","overlapLength","autoSeqSetting","autoSeekSetting","_tempo","setParameters","clearMidBuffer","sampleRate","sequenceMs","seekWindowMs","overlapMs","calculateSequenceParameters","calculateOverlapLength","tempo","overlapInMsec","newOvl","refMidBuffer","mi","ma","seq","seek","checkLimits","seekWindowLength","seekLength","seekBestOverlapPositionStereoQuick","seekBestOverlapPositionStereo","bestOffset","bestCorrelation","correlation","preCalculateCorrelationReferenceStereo","Number","MIN_VALUE","calculateCrossCorrelationStereo","scanCount","correlationOffset","tempOffset","temp","mixingPosition","compare","mixing","calcLength","mixingOffset","overlapPosition","overlapStereo","inputPosition","input","outputPosition","tempFrame","frameScale","fi","inputOffset","outputOffset","overlapSkip","receiveSamples","sampleReq","seekBestOverlapPosition","overlap","putBuffer","start","skipFract","nominalSkip","newTempo","intskip","enable","testFloatEqual","a","SoundTouch","transposer","stretch","_intermediateBuffer","virtualPitch","virtualRate","virtualTempo","calculateEffectiveRateAndTempo","previousTempo","previousRate","rateChange","tempoChange","pitch","pitchOctaves","exp","pitchSemitones","WebAudioBufferSource","getChannelData","dualChannel","numberOfChannels","getWebAudioNode","sourcePositionCallback","bufferSize","node","createScriptProcessor","onaudioprocess","framesExtracted","onEnd","pad","n","z","minsSecs","secs","mins","onUpdate","currentTimePlayed","timePlayed","CustomEvent","formattedTimePlayed","percentagePlayed","_node","dispatchEvent","PitchShifter","_soundtouch","source","_filter","sourcePostion","duration","listeners","toNode","connect","disconnect","eventName","cb","addEventListener","detail","_this2","e","forEach","removeEventListener","perc","semitone","isString","PubSub","fns","any","fn","prev","concat","splice","on","method","prop","off","pub","observable","Proxy","fire","once","has","createDisplayCanvas","copyContextToCanvas","clearRect","drawImage","clearCanvas","shifter","decodeAudioData","audioBuffer","player","sync","trackLength","formattedDuration","load","from","wrapText","text","maxWidth","lineHeight","words","line","testLine","measureText","fillText","drawTag","cvs","font","fillStyle","textAlign","loadTag","handleExtractedZip","responseArr","status","loaded","loading","setVolume","val","gainNode","gain","KaraokePlayer","selector","wrapper","currentSize","querySelector","classList","add","_this3","titleImage","onloaded","remove","AudioContext","webkitAudioContext","createGain","onvolume","songVolume","destroy","toLowerCase","loadZipFile","loadFileBuffer","_this4","zipResponse","isPlaying","pause","destination","play","playing","changePlayerPosition","pitchChange","change","newValue","toFixed","fallback","fallbackVolume","playIcon","pauseIcon","htmlToElement","html","template","innerHTML","content","setupListeners","playBtn","removeAttribute","volumeBtn","setAttribute","ontimeplayed","onpercentageplayed","progress","ontracklength","ondestroy","onplay","playIcn","icn","volumeIcn","volumeSlider","contains","togglePlay","changePosition","changeKey","changeVolume","removeListeners","getBoundingClientRect","pageX","offsetWidth","isNaN","fallbackPitch","parseFloat","CDGControls","controls","ctrlTemplate","includes"],"mappings":"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"}